# This file contains the credentials for the voice & chat platforms
# which your bot is using.
# https://rasa.com/docs/rasa/messaging-and-voice-channels

rest:
#  # you don't need to provide anything here - this channel doesn't
#  # require any credentials


#facebook:
#  verify: "<verify>"
#  secret: "<your secret>"
#  page-access-token: "<your page access token>"

#slack:
#  slack_token: "<your slack token>"
#  slack_channel: "<the slack channel>"
#  slack_signing_secret: "<your slack signing secret>"
twilio:
  account_sid: "ACc095778354921275b6a3eb3cceb19757" # from "guidizy-whatsapp" account Live Account SID of Twilio
  auth_token: "f2725d114b60b34f622a89e7be0a407a" # from "guidizy-whatsapp" account LIve  Auth Token of Twilio
  twilio_number: "whatsapp:+14155238886"
  # account_sid: "ACe7e66b5d0a6437d679f5557042d1ddd2"
  # auth_token: "160936ce09402dce089a203ef949dccf"
  # twilio_number: "whatsapp:+14155238886"

socketio:
  user_message_evt: user_uttered #event name used by Rasa for User Uttered Message to BOT over socket.io.
  bot_message_evt: bot_uttered #event name used by Rasa for BOT Uttered Message to User over socket.io.
  session_persistence: true 

# whatsapp.WhatsAppInput:
#   auth_token: "EAAOFYmbZAANIBOZCosSpZBovRe6AptPPvzptZAjwONksZCFrcPbklSWkmccNkK9U6WeHsOByP75z6uKfXCBAoOY2WNRZB8OPeGldrCkH3tUdUb8emxLteB05bvUSleymrFgpOVUxkCvqgFc8g2yfkiw6zAIlpfYslOnwZAyHq34ZB6YDdUvZB60CTTUbjK5dKnWgWwKFksvdRzZBTMy7ZCeYfitR9sVMWVAT6MvHMWyFgwfm8NUZAA94cGzX"
#   phone_number_id: "115060571599308"
#   verify_token: "GUIDIZY-DEMO"


facebook:
  verify: "GUDIZIY-DEMO"
  secret: "6b87da2fc01a138bc08029cabcfc2f9f"
  page-access-token: "EAAOFYmbZAANIBO9NgdYDfHghHLkNLgaLqCRmLphoTreVJlixwnrZBpZCG2rdS5kKoC6Laj0pWRWsoMRlvyl074dzq6aGZBShRunsthvqtO16HsGAZBp1AAwc8sXksoVrZCw6ZCZC9KHLWjVQLvpbZC1jpfDlHPtYQ2biCaHBRuFZBEh3VE1TY3kf4LfsCAprZBw3NWlsc9FalHG3ZBuw7UHF"

# By default, the SocketIO channel uses the socket id as sender_id, which causes the session to restart at every page reload.
# SO, in order to avoid this (i.e. session restart after every page load) session_persistence can be set to true.
# In that case, the frontend is responsible for generating a session id and sending it to the Rasa Core server
# by emitting the event session_request with {session_id: [session_id]} immediately  after the connect event.


#mattermost:
#  url: "https://<mattermost instance>/api/v4"
#  token: "<bot token>"
#  webhook_url: "<callback URL>"

# This entry is needed if you are using Rasa Enterprise. The entry represents credentials
# for the Rasa Enterprise "channel", i.e. Talk to your bot and Share with guest testers.
rasa:
  url: "http://localhost:5002/api"
